<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../../../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../../../jacoco-resources/report.gif" type="image/gif"/><title>FloodStationsService.java</title><link rel="stylesheet" href="../../../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../../../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../../../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../../../index.html" class="el_report">projet5 (1) (4 juin 2023 18:52:52)</a> &gt; <a href="../../index.html" class="el_group">projet5</a> &gt; <a href="../index.html" class="el_bundle">src/main/java</a> &gt; <a href="index.source.html" class="el_package">com.openclassroom.projet5.service.status</a> &gt; <span class="el_source">FloodStationsService.java</span></div><h1>FloodStationsService.java</h1><pre class="source lang-java linenums">package com.openclassroom.projet5.service.status;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.openclassroom.projet5.model.FireStations;
import com.openclassroom.projet5.model.MedicalRecords;
import com.openclassroom.projet5.model.Persons;
import com.openclassroom.projet5.model.status.FloodStation;
import com.openclassroom.projet5.model.status.FloodStationsPerson;
import com.openclassroom.projet5.repository.IDAOJson;
import com.openclassroom.projet5.utils.AgeHandler;


/*
 * Format data from DTO into FloodStation
 */
@Service
<span class="fc" id="L25">public class FloodStationsService implements IFloodStationsService {</span>
    @Autowired
    private IDAOJson DTOjson;
<span class="fc" id="L28">    private static final Logger logger = LogManager.getLogger(&quot;FloodStationsService&quot;);</span>

    /*
     * @Param List&lt;Integer&gt; stationNumbers
     */
    @Override
    public List&lt;FloodStation&gt; getFloodStation(List&lt;Integer&gt; stationNumbers) {
<span class="fc" id="L35">	List&lt;FloodStation&gt; resultFloodStations = new ArrayList&lt;FloodStation&gt;();</span>

<span class="fc" id="L37">	List&lt;Persons&gt; persons = DTOjson.getJsonData().getPersons();</span>
<span class="fc" id="L38">	List&lt;MedicalRecords&gt; medicalRecords = DTOjson.getJsonData().getMedicalrecords();</span>
<span class="fc" id="L39">	List&lt;FireStations&gt; fireStations = DTOjson.getJsonData().getFirestations();</span>

	// Loop through each stationNumber and make all the required manipulations
<span class="fc bfc" id="L42" title="All 2 branches covered.">	for (Integer stationNumber : stationNumbers) {</span>

	    // Retrieve fireStation coverage addresses
<span class="fc" id="L45">	    List&lt;String&gt; filteredFireStationAddresses = new ArrayList&lt;String&gt;();</span>
<span class="fc bfc" id="L46" title="All 2 branches covered.">	    for (FireStations fireStation : fireStations) {</span>
<span class="fc bfc" id="L47" title="All 2 branches covered.">		if (fireStation.getStation().equals(String.valueOf(stationNumber))) {</span>
<span class="fc" id="L48">		    filteredFireStationAddresses.add(fireStation.getAddress());</span>
		}
	    }

	    // Loop through each address to retrieve the related Persons and add the values
	    // to resultFloodStations
<span class="fc bfc" id="L54" title="All 2 branches covered.">	    for (String address : filteredFireStationAddresses) {</span>
<span class="fc" id="L55">		FloodStation floodStationToAdd = new FloodStation();</span>
<span class="fc" id="L56">		floodStationToAdd.setAddress(address);</span>

		// Loop through the list of Persons to retrieve the ones living in the address
<span class="fc" id="L59">		List&lt;Persons&gt; filteredPersons = new ArrayList&lt;Persons&gt;();</span>
<span class="fc bfc" id="L60" title="All 2 branches covered.">		for (Persons person : persons) {</span>
<span class="fc bfc" id="L61" title="All 2 branches covered.">		    if (person.getAddress().equals(address)) {</span>
<span class="fc" id="L62">			filteredPersons.add(person);</span>
		    }
		}

		// Looping through the filteredPersons list to retrieve their MedicalRecords
		// and adding them to intermediary variable floodStationsPersonsToAdd
<span class="fc" id="L68">		List&lt;FloodStationsPerson&gt; floodStationsPersonsToAdd = new ArrayList&lt;FloodStationsPerson&gt;();</span>
<span class="fc bfc" id="L69" title="All 2 branches covered.">		for (Persons filteredPerson : filteredPersons) {</span>
<span class="fc bfc" id="L70" title="All 2 branches covered.">		    for (MedicalRecords medicalRecord : medicalRecords) {</span>

<span class="fc bfc" id="L72" title="All 2 branches covered.">			if (filteredPerson.getFirstName().equals(medicalRecord.getFirstName())</span>
<span class="pc bpc" id="L73" title="1 of 2 branches missed.">				&amp;&amp; filteredPerson.getLastName().equals(medicalRecord.getLastName())) {</span>
<span class="fc" id="L74">			    floodStationsPersonsToAdd.add(new FloodStationsPerson(filteredPerson.getFirstName(),</span>
<span class="fc" id="L75">				    filteredPerson.getLastName(), filteredPerson.getPhone(),</span>
<span class="fc" id="L76">				    AgeHandler.computeAge(medicalRecord.getBirthdate(), new Date()),</span>
<span class="fc" id="L77">				    medicalRecord.getMedications(), medicalRecord.getAllergies()));</span>
			}
		    }
		}

<span class="fc" id="L82">		floodStationToAdd.setFloodStationsPersons(floodStationsPersonsToAdd);</span>
<span class="fc" id="L83">		resultFloodStations.add(floodStationToAdd);</span>

	    }

	}
<span class="fc" id="L88">	return resultFloodStations;</span>

    }
}
</pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span>projet5 (1) (4 juin 2023 18:52:52)</div></body></html>