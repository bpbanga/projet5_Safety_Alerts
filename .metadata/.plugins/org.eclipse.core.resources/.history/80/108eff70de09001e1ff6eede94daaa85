<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../../../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../../../jacoco-resources/report.gif" type="image/gif"/><title>MedicalRecordService.java</title><link rel="stylesheet" href="../../../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../../../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../../../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../../../index.html" class="el_report">projet5 (1) (4 juin 2023 18:52:52)</a> &gt; <a href="../../index.html" class="el_group">projet5</a> &gt; <a href="../index.html" class="el_bundle">src/main/java</a> &gt; <a href="index.source.html" class="el_package">com.openclassroom.projet5.service</a> &gt; <span class="el_source">MedicalRecordService.java</span></div><h1>MedicalRecordService.java</h1><pre class="source lang-java linenums">package com.openclassroom.projet5.service;

import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.openclassroom.projet5.model.MedicalRecords;
import com.openclassroom.projet5.repository.IDAOJson;

/*
 * Service for CRUD operations on MedicalRecords
 */
@Service
<span class="fc" id="L17">public class MedicalRecordService implements IMedicalRecordService {</span>
    @Autowired
    private IDAOJson DTOjson;
<span class="fc" id="L20">    private static final Logger logger = LogManager.getLogger(&quot;MedicalRecordService&quot;);</span>

    /*
     * Retrieve MedicalRecords from DTO
     */
    @Override
    public List&lt;MedicalRecords&gt; getMedicalRecords() {
<span class="fc" id="L27">	return DTOjson.getJsonData().getMedicalrecords();</span>
    }

    /*
     * Add MedicalRecord from JSON data
     * 
     * @Param MedicalRecord medicalRecordToAdd
     */
    @Override
    public void postMedicalRecord(MedicalRecords medicalRecordToAdd) {
<span class="fc" id="L37">	List&lt;MedicalRecords&gt; medicalRecords = getMedicalRecords();</span>
<span class="fc" id="L38">	medicalRecords.add(medicalRecordToAdd);</span>
<span class="fc" id="L39">	DTOjson.getJsonData().setMedicalrecords(medicalRecords);</span>
<span class="fc" id="L40">    }</span>

    /*
     * Edit MedicalRecord from JSON data
     * 
     * @Param MedicalRecord medicalRecordToUpdate
     */
    @Override
    public void putMedicalRecord(MedicalRecords medicalRecordToUpdate) {
<span class="fc" id="L49">	List&lt;MedicalRecords&gt; medicalRecords = getMedicalRecords();</span>

<span class="fc bfc" id="L51" title="All 2 branches covered.">	for (MedicalRecords medicalRecord : medicalRecords) {</span>
<span class="fc bfc" id="L52" title="All 2 branches covered.">	    if (medicalRecord.getFirstName().equals(medicalRecordToUpdate.getFirstName())</span>
<span class="pc bpc" id="L53" title="1 of 2 branches missed.">		    &amp;&amp; medicalRecord.getLastName().equals(medicalRecordToUpdate.getLastName())) {</span>
<span class="pc bpc" id="L54" title="1 of 2 branches missed.">		if (medicalRecordToUpdate.getBirthdate() != null)</span>
<span class="nc" id="L55">		    medicalRecord.setBirthdate(medicalRecordToUpdate.getBirthdate());</span>
<span class="pc bpc" id="L56" title="1 of 2 branches missed.">		if (medicalRecordToUpdate.getMedications() != null)</span>
<span class="nc" id="L57">		    medicalRecord.setMedications(medicalRecordToUpdate.getMedications());</span>
<span class="pc bpc" id="L58" title="1 of 2 branches missed.">		if (medicalRecordToUpdate.getAllergies() != null)</span>
<span class="fc" id="L59">		    medicalRecord.setAllergies(medicalRecordToUpdate.getAllergies());</span>
	    }
	}
<span class="fc" id="L62">    }</span>

    /*
     * Delete MedicalRecord from JSON data
     * 
     * @Param MedicalRecord medicalRecordToDelete
     */
    @Override
    public void deleteMedicalRecord(MedicalRecords medicalRecordToDelete) {
<span class="fc" id="L71">	List&lt;MedicalRecords&gt; medicalRecords = getMedicalRecords();</span>

<span class="fc bfc" id="L73" title="All 2 branches covered.">	for (int i = 0; i &lt; medicalRecords.size(); i++) {</span>
<span class="fc bfc" id="L74" title="All 2 branches covered.">	    if (medicalRecords.get(i).getFirstName().equals(medicalRecordToDelete.getFirstName())</span>
<span class="pc bpc" id="L75" title="1 of 2 branches missed.">		    &amp;&amp; medicalRecords.get(i).getLastName().equals(medicalRecordToDelete.getLastName())) {</span>
<span class="fc" id="L76">		medicalRecords.remove(i);</span>
	    }
	}
<span class="fc" id="L79">    }</span>

}
</pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span>projet5 (1) (4 juin 2023 18:52:52)</div></body></html>