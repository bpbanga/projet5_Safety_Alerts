<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="fr"><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8"/><link rel="stylesheet" href="../../../jacoco-resources/report.css" type="text/css"/><link rel="shortcut icon" href="../../../jacoco-resources/report.gif" type="image/gif"/><title>PersonService.java</title><link rel="stylesheet" href="../../../jacoco-resources/prettify.css" type="text/css"/><script type="text/javascript" src="../../../jacoco-resources/prettify.js"></script></head><body onload="window['PR_TAB_WIDTH']=4;prettyPrint()"><div class="breadcrumb" id="breadcrumb"><span class="info"><a href="../../../jacoco-sessions.html" class="el_session">Sessions</a></span><a href="../../../index.html" class="el_report">projet5 (1) (4 juin 2023 18:52:52)</a> &gt; <a href="../../index.html" class="el_group">projet5</a> &gt; <a href="../index.html" class="el_bundle">src/main/java</a> &gt; <a href="index.source.html" class="el_package">com.openclassroom.projet5.service</a> &gt; <span class="el_source">PersonService.java</span></div><h1>PersonService.java</h1><pre class="source lang-java linenums">package com.openclassroom.projet5.service;

import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.openclassroom.projet5.model.Persons;
import com.openclassroom.projet5.repository.DAOJson;
import com.openclassroom.projet5.repository.IDAOJson;



	/*
	 * Service for CRUD operations on Persons
	 */
	@Service
<span class="fc" id="L20">	public class PersonService implements IPersonsService {</span>
	    @Autowired
	    private IDAOJson DTOjson;
<span class="fc" id="L23">	    private static final Logger logger = LogManager.getLogger(&quot;PersonService&quot;);</span>

	    /*
	     * Retrieve Persons from DTO
	     */
	    @Override
	    public List&lt;Persons&gt; getPersons() {
<span class="fc" id="L30">		return DTOjson.getJsonData().getPersons();</span>

	    }

	    /*
	     * Add Person from JSON data
	     * 
	     * @Param Person personToAdd
	     */
	    @Override
	    public void postPerson(Persons personToAdd) {
<span class="fc" id="L41">		List&lt;Persons&gt; persons = getPersons();</span>
<span class="fc" id="L42">		persons.add(personToAdd);</span>
<span class="fc" id="L43">		DTOjson.getJsonData().setPersons(persons);</span>
<span class="fc" id="L44">	    }</span>

	    /*
	     * Edit Person from JSON data
	     * 
	     * @Param Person personToUpdate
	     */
	    @Override
	    public void putPerson(Persons personToUpdate) {
<span class="fc" id="L53">		List&lt;Persons&gt; persons = getPersons();</span>

<span class="fc bfc" id="L55" title="All 2 branches covered.">		for (Persons person : persons) {</span>
<span class="fc bfc" id="L56" title="All 2 branches covered.">		    if (person.getFirstName().equals(personToUpdate.getFirstName())</span>
<span class="fc bfc" id="L57" title="All 2 branches covered.">			    &amp;&amp; person.getLastName().equals(personToUpdate.getLastName())) {</span>
<span class="pc bpc" id="L58" title="1 of 2 branches missed.">			if (personToUpdate.getAddress() != null)</span>
<span class="nc" id="L59">			    person.setAddress(personToUpdate.getAddress());</span>
<span class="pc bpc" id="L60" title="1 of 2 branches missed.">			if (personToUpdate.getCity() != null)</span>
<span class="nc" id="L61">			    person.setCity(personToUpdate.getCity());</span>
<span class="pc bpc" id="L62" title="1 of 2 branches missed.">			if (personToUpdate.getZip() != null)</span>
<span class="nc" id="L63">			    person.setZip(personToUpdate.getZip());</span>
<span class="pc bpc" id="L64" title="1 of 2 branches missed.">			if (personToUpdate.getEmail() != null)</span>
<span class="nc" id="L65">			    person.setEmail(personToUpdate.getEmail());</span>
<span class="pc bpc" id="L66" title="1 of 2 branches missed.">			if (personToUpdate.getPhone() != null)</span>
<span class="fc" id="L67">			    person.setPhone(personToUpdate.getPhone());</span>
		    }
		}
<span class="fc" id="L70">	    }</span>

	    /*
	     * Delete Person from JSON data
	     * 
	     * @Param Person personToDelete
	     */
	    @Override
	    public void deletePerson(Persons personToDelete) {
<span class="fc" id="L79">		List&lt;Persons&gt; persons = getPersons();</span>
<span class="fc" id="L80">		Boolean personExist = false;</span>
<span class="fc bfc" id="L81" title="All 2 branches covered.">		for (int i = 0; i &lt; persons.size(); i++) {</span>
<span class="fc bfc" id="L82" title="All 2 branches covered.">		    if (persons.get(i).getFirstName().equals(personToDelete.getFirstName())</span>
<span class="fc bfc" id="L83" title="All 2 branches covered.">			    &amp;&amp; persons.get(i).getLastName().equals(personToDelete.getLastName())) {</span>
<span class="fc" id="L84">			persons.remove(i);</span>
<span class="fc" id="L85">			personExist = true;</span>
		    }
		}
<span class="fc" id="L88">	    }</span>

	

}
</pre><div class="footer"><span class="right">Created with <a href="http://www.jacoco.org/jacoco">JaCoCo</a> 0.8.7.202105040129</span>projet5 (1) (4 juin 2023 18:52:52)</div></body></html>